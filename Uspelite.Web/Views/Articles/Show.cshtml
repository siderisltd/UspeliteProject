@using System.Globalization
@model Uspelite.Web.Models.Articles.ConcreteArticleViewModel

@{
    ViewBag.Title = "Posts";
}

@section sidebar{
    @(Html.Action<ChildActionsController>(x => x.GetSideBar()))
}

@if (Model.ShowEdit)
{
    @Html.ActionLink("Edit", "Add", "Articles", new { Id = Model.Id }, new { @class = "btn btn-success"})
}


<article id="article-post" data-slug="@Model.Slug" class="cat-sports">

    <header>

        @*<ol class="breadcrumb">
                <li><a href="#">Home</a></li>
                <li><a href="#">Sport</a></li>
                <li><a href="#">Todo history how you get there</a></li>
                <li class="active">Football</li>
            </ol>*@
        <h1>@Model.Title</h1>
    </header>

    <div class="head-image thumb-wrap relative">
        <a href="article-sport.php">@Html.Image(x => Model.MainArticlePic.OriginalSizedPicture, "Alt responsive picture", "770", "470", new { @class = "img-responsive" })</a>
        <a href="/Categories/Show/@Model.Category.Slug" class="theme">@Model.Category.Title</a>
    </div>
    <p class="post-meta-box">
        <span>Публикувано от <a class="name" href="/Authors/Info/@Model.Author.Id/@Model.Author.FullName.Replace(' ', '-')">@Model.Author.FullName</a></span>
        <span> на @Html.DisplayFor(x => Model.CreatedOn)</span>
        <span> в @Model.Category.Title</span>
    </p>
    <p>
        @Html.Raw(Model.SanitizedFullContent)
    </p>


       @*@Html.Partial("~/Views/Shared/Partials/_RatingStars.cshtml", Model)*@
    <footer>
        <h3>Споделете статията</h3>

       @Html.Partial("_ShareButtons")

        <div class="author-box">
            <img src="/@Model.Author.ProfileImage.Resized400Picture" width="115" height="115" alt="" class="img-circle">
            <a class="name" href="/Authors/Info/@Model.Author.Id/@Model.Author.FullName.Replace(' ', '-')">@Model.Author.FullName</a>
            <p>@Model.Author.ShortInfo</p>
        </div>

        @*START Suggested articles*@ 
        <section id="related-articles-section" class="news-lay-3 bottom-margin">

            <header>
                <h2><a href="">Recommended for you</a>
                </h2>
                <span class="borderline"></span>
            </header>

            <div class="row">

                @for (int i = 0; i < 3; i++)
                {
                    var post = Model.RelatedArticles[i];

                    <article class="col-md-4 cat-sports">
                        <a href="~/@post.Slug">
                            <div class="thumb-wrap relative">
                                @Html.Image(x => post.MainArticlePic.Resized400Picture, "Alt responsive picture", "265", "160", new { @class = "img-responsive" })
                                <a href="/Categories/Show/@post.Category.Slug" class="theme">@post.Category.Title</a>
                            </div>
                            <span class="published">@Html.DisplayFor(x => post.CreatedOn)</span>
                            <h3>
                                @(post.Title.Substring(0, post.Title.Length > 30 ? 30 : post.Title.Length) + "...")
                            </h3>
                        </a>
                    </article>
                }

                @for (int i = 3; i < 6; i++)
                {
                    var post = Model.RelatedArticles[i];

                    <article class="col-md-4 cat-sports">
                        <a href="~/@post.Slug">
                            <div class="thumb-wrap relative">
                                @Html.Image(x => post.MainArticlePic.Resized400Picture, "Alt responsive picture", "265", "160", new { @class = "img-responsive" })
                                <a href="/Categories/Show/@post.Category.Slug" class="theme">@post.Category.Title</a>
                            </div>
                            <span class="published">@Html.DisplayFor(x => post.CreatedOn)</span>
                            <h3>
                                @(post.Title.Substring(0, post.Title.Length > 30 ? 30 : post.Title.Length) + "...")
                            </h3>
                        </a>
                    </article>
                }
            </div>
        </section>

        @*END Suggested articles*@ 

    </footer>
    </article>


<!-- start:article-comments -->
<section id="article-comments">

    <header>
        <h2><a id="commentsCount">@Model.Comments.Count коментара</a>
        </h2>
        <span class="borderline"></span>
    </header>


    <div class="alert notification-label comment-message" role="alert"></div>

    @if (User.Identity.IsAuthenticated)
    {
        <section id="article-comments-form">
            <header>
                <h2>
                    <a onclick="showCommentBox()" style="cursor:pointer">Оставете коментар</a>
                </h2>
                <span class="borderline"></span>
            </header>

            <div id="comment-box" style="display: none">
                @using (Ajax.BeginForm("AddToArticle", "Comments", null, new AjaxOptions
                {
                    HttpMethod = "POST",
                    InsertionMode = InsertionMode.InsertBefore,
                    UpdateTargetId = "comments-list",
                    OnSuccess = "acceptedComment",
                    OnFailure = "rejectedComment"
                }))
                {
                    @Html.AntiForgeryToken()

                    <input type="hidden" value="@Model.Id" name="toId"/>

                    <div class="row bottom-margin">
                        <div class="col-md-12">
                            <textarea id="comment-area" class="form-control" placeholder="Коментар" rows="5" name="content"></textarea>
                        </div>
                    </div>
                    <div>
                        <input type="submit" class="show-more cat-sports" title="Post comment" value="Добави"/>
                    </div>
                }
            </div>
        </section>
    }

    <!-- start:comments-list -->
    <ol id="comments-list">
        @foreach (var comment in Model.Comments)
        {
            @Html.Partial("~/Views/Comments/_CommentPartial.cshtml", comment);
        }
    </ol>
</section>
<!-- end:article-comments -->





@section overridingStyles {
    <style>
        div.author-box {
            min-height: 152px;
        }
    </style>
}


@section scripts {
    @Scripts.Render("~/Scripts/Custom/ratingScript.js")
    @Scripts.Render("~/Scripts/Custom/shares.js")

    <script>
        function showCommentBox() {
            $('#comment-box').css('display', 'block');
        }


        function acceptedComment() {
            var elementHtml = $('#commentsCount').html();
            var elements = elementHtml.split(' ');
            var commentsCount = elements[0] * 1;
            var elementText = elements[1];
            commentsCount += 1;
            $('#commentsCount').html(commentsCount + ' ' + elementText);

            $('#comment-area').val('');
            var $messageElement = $('.comment-message');
            $messageElement.addClass('alert-success');
            $messageElement.html("Успешно добавихте коментар");
            $messageElement.css('display', 'block');
            $messageElement.delay(2700).fadeOut(100);
            $('#comment-box').css('display', 'none');
            //alert-success
        }
        function rejectedComment() {

            var $messageElement = $('.comment-message');
            $messageElement.addClass('alert-danger');
            $messageElement.html("Грешка при добавяне на коментар");
            $messageElement.css('display', 'block');
            $messageElement.delay(2700).fadeOut(100);
        }
    </script>
}