@using Uspelite.Services.Common
@model Uspelite.Web.Models.Articles.ArticlesBindingModel

@Html.DisplayFor(x => ViewData.ModelState)

<div id="containerBox">
    <div id="data-helper" data-imagefolder="@Constants.ROOT_IMAGES_FOLDER"></div>

    <div id="addLinkHolder"></div>
    @using (Html.BeginForm("Add", "Articles", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        @Html.EditorForModel(Model)

        <input id="x1" type="hidden" name="X1"/>
        <input id="x2" type="hidden" name="X2"/>

        <input id="y1" type="hidden" name="Y1"/>
        <input id="y2" type="hidden" name="Y2"/>

        <input id="w" type="hidden" name="W" />
        <input id="h" type="hidden" name="H" />


        <div class="form-group">
            <div class="col-lg-10 col-lg-offset-2">
                <input type="reset" class="btn btn-danger" value="Reset form" />
                <input type="submit" class="btn btn-success" value="Add article" />
            </div>
        </div>
    }
</div>
@section styles {
    @Styles.Render("~/bundles/kendoStyles")
    <link href="~/Scripts/Libraries/JCrop/css/jquery.Jcrop.min.css" rel="stylesheet" />
}

@section overridingStyles{
    <style>
        div#main {
            width: 100%;
        }

        .k-editor .k-HorizontalRule {
            background: 50% 50% no-repeat url(http://digitaltools.node3000.com/wp-content/themes/digital-tools/images/rss-icon-16x16px.png);
        }

        #addLinkHolder {
            display: none;
            left: 0;
            right: 0;
            margin-left: auto;
            margin-right: auto;
            position: absolute;
            z-index: 10000;
            background-color: white;
            width: 500px;
            vertical-align: middle;
        }
    </style>
}

@section scripts{
    @Scripts.Render("~/bundles/kendo")

    @*<script src="~/Scripts/Libraries/JCrop/js/jquery.color.js"></script>*@
    <script src="~/Scripts/Libraries/JCrop/js/jquery.Jcrop.js"></script>

    <script>
        //editor image's css properties
        $(function() {
            $($("#Content").data("kendoEditor").body).on('click', 'img', function(ev) {
                var $that = $(this);
                $('#resize-box').remove();
                var width = $that.css('width');
                var height = $that.css('height');
                debugger;
                showResizeBox($that);

                //$that.css('width', '100px');
                //$that.css('height', '100px');
            });
        });

        function showResizeBox(clickedImg) {
            var width = clickedImg.css('width');
            var height = clickedImg.css('height');

            var resizingBox =
                '<div id="resize-box">' +
                    '<label for="width-inp">Width</label>' +
                    '<input id="width-inp" type="text" value="' + width + '"/>' +
                    '<br/>' +
                    '<input  id="resizeImg" type="button" class="btn btn-success" value="Resize" onclick="resizeImg(clickedImg)"' +
               '</div>';



            //var $el = $("<input />").attr('type', 'button').attr('class', 'btn btn-success').attr('value', 'Resize').click(function (ev, clickedImg) {
            //    debugger;

            //});

            $('#containerBox').append(resizingBox);

            $('#resizeImg').click({ img: clickedImg }, resizeImg);
            //  $('#resize-box').append($el);

            //$('#btn-resizeCss').on('click', function (element) {
            //  debugger;
            //var newWidth = $('#resize-box #width-inp').val();
            //var newHeight = $('#resize-box #height-inp').val();

            //clickedImg.css('width', newWidth);
            //clickedImg.css('height', newHeight);

            //});
        }

        function resizeImg(ev) {
            debugger;


            //var newHeight = $('#resize-box #height-inp').val();

            var clickedImage = ev.data.img;
            var originalWidth = clickedImage.css('width');
            var originalHeight = clickedImage.css('height');

            var newWidth = $('#resize-box #width-inp').val();
            var newHeight = newWidth * (originalWidth / originalHeight);

            clickedImage.css('width', newWidth);
            clickedImage.css('height', newHeight);

            $('#resize-box').remove();
        }

    </script>'




    <script>
        //custom link tool's scripts
        $(function() {
            $('#addLinkHolder').on('change', '#selectLink', function() {
                var selectedArticleSlug = this[this.selectedIndex].value;
                var selectedArticleTitle = this[this.selectedIndex].text;
                $('#Url').val('/Articles/Show/' + selectedArticleSlug);
                $('#copyText').val(selectedArticleTitle);
            });
        });

        function execFunction(e) {
            $.get('/Articles/BuildLinkView', null, function(data) {
                $('#addLinkHolder').html(data);
                $('#addLinkHolder').css('display', 'table-cell');
            });
        }

        function addLink() {
            var editor = $("#Content").data("kendoEditor");

            var linkText = $('#Title').val();
            var location = $('#Url').val();
            var tooltip = $('#ToolTip').val();

            var blank = $('#OpenInNewWindow').is(":checked");
            var linkHtml = GenerateLink(linkText, location, tooltip, blank);
            editor.exec("inserthtml", { value: linkHtml });

            $('#addLinkHolder').empty();
        }

        function GenerateLink(linkText, location, title, blank) {
            var target = '';
            var linkTitle = '';

            if (blank) {
                target = 'target="_blank"';
            }
            if (title.length > 1) {
                linkTitle = 'title="' + title + '"';
            }

            if (location[0] !== '/') {
                if (!location.match("^http://")) {
                    location = 'http://' + location;
                }
            }

            var result = '<a href="' + location + '"' + target + linkTitle + '>' + linkText + '</a>';
            return result;
        }

    </script>



    <script>
        //main image crop and visualize
        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function(e) {
                    debugger;
                    if (JCropObj.instantiated) {
                        JCropObj.destroy();
                        $('#cropBtn').hide();
                    }

                    $('#main-upload-image').attr('src', e.target.result);
                    $('#cropBtn').show();
                    debugger;
                    JCropObj.innitialize();
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#image-upload-input").change(function() {
            readURL(this);
        });


        //attach jcrop and get the coords

        JCropObj = {
            jcrop_api_obj: this,

            instantiated: false,

            innitialize: function innitialize() {
                JCropObj.instantiated = true;
                $('#main-upload-image').Jcrop({
                    setSelect: [60, 70, 750, 500],
                    aspectRatio: 3 / 2,
                    boxWidth: 650,
                    onChange: showCoords,
                    onSelect: showCoords,
                    onRelease: clearCoords
                }, function() {
                    JCropObj.jcrop_api_obj = this;
                });

                $('#coords').on('change', 'input', function(e) {
                    var x1 = $('#x1').val(),
                        x2 = $('#x2').val(),
                        y1 = $('#y1').val(),
                        y2 = $('#y2').val();
                    JCropObj.jcrop_api_obj.setSelect([x1, y1, x2, y2]);
                });

            },
            destroy: function destroy() {
                JCropObj.jcrop_api_obj.destroy();
                JCropObj.instantiated = false;
            }
        }

        //var sections = {
        //    anim_buttons: 'Animate Selection'
        //};
        //// Define animation buttons
        //var ac = {
        //    anim1: [217, 122, 382, 284],
        //    anim2: [20, 20, 580, 380],
        //    anim3: [24, 24, 176, 376],
        //    anim4: [347, 165, 550, 355],
        //    anim5: [136, 55, 472, 183]
        //};

        //var a_count = 1;
        //// Create animation buttons
        //for (i in ac) {
        //    $('#anim_buttons .btn-group')
        //      .append(
        //        create_btn(a_count++).click(animHandler(ac[i])),
        //        ' '
        //      );
        //}

        //function setoptHandler(k, v) {
        //    return function (e) {
        //        $(e.target).closest('.btn-group').find('.active').removeClass('active');
        //        $(e.target).addClass('active');
        //        var opt = {};
        //        opt[k] = v;
        //        jcrop_api.setOptions(opt);
        //        return false;
        //    };
        //};
        //// Handler for animation buttons
        //function animHandler(v) {
        //    return function (e) {
        //        $(e.target).addClass('active');
        //        jcrop_api.animateTo(v, function () {
        //            $(e.target).closest('.btn-group').find('.active').removeClass('active');
        //        });
        //        return false;
        //    };
        //};


        function showCoords(c) {
            var coordHelper = $('#coordinates-data-helper');
            $('#x1').val(c.x);
            coordHelper.attr('data-x1', c.x);
            $('#y1').val(c.y);
            coordHelper.attr('data-y1', c.y);
            $('#x2').val(c.x2);
            coordHelper.attr('data-x2', c.x2);
            $('#y2').val(c.y2);
            coordHelper.attr('data-y2', c.y2);
            $('#w').val(c.w);
            coordHelper.attr('data-w', c.w);
            $('#h').val(c.h);
            coordHelper.attr('data-h', c.h);
        };

        function clearCoords() {
            $('#coords input').val('');
        };

        //remove existing large image
        //draw cropped image on the canvas
        //save the coords as data attr on the canvas

        function cropBtn_click() {
            debugger;
            var $canvas = $('#coordinates-data-helper');
            var x1 = $canvas.attr('data-x1');
            var y1 = $canvas.attr('data-y1');
            var x2 = $canvas.attr('data-x2');
            var y2 = $canvas.attr('data-y2');
            var w = $canvas.attr('data-w');
            var h = $canvas.attr('data-h');

            var context = $canvas[0].getContext('2d');
            var imageObj = new Image();
            var imageSource = $('#main-upload-image').attr('src');
            $canvas.attr('width', '600');
            $canvas.attr('height', '400');

            imageObj.onload = function() {
                debugger;
                context.drawImage(imageObj, x1, y1, w, h, 0, 0, 600, 400);
                $('#main-upload-image').attr('src', '#');
                $('#main-upload-image').css('display', 'none');
                $('#main-upload-image').css('width', '0');
                $('#main-upload-image').css('height', '0');

                JCropObj.destroy();
                $('#cropBtn').hide();
            };

            imageObj.src = imageSource;
        }


    </script>
}