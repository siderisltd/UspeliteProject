@using Uspelite.Data.Common.Roles
@model Uspelite.Web.Models.Articles.ArticlesBindingModel


<div class="well bs-component">
    <fieldset>
        <h2>Добавяне на статия</h2>

        <br />

        @Html.EnumDropDownListFor(x => x.Status, new { })  @*new { style = "display: none" }*@

        @Html.HiddenFor(x => x.Id)

        @Html.HiddenFor(x => x.Slug)

        <div class="form-group">
            @Html.LabelFor(x => x.Title, new {@class = "col-lg-2 control-label"})
            <div class="col-lg-10">
                @Html.TextBoxFor(x => x.Title, new {@class = "form-control"})
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(x => x.CategoryId, new { @class = "col-lg-2 control-label" })
            <div class="col-lg-10">
                @Html.DropDownListFor(x => x.CategoryId, Model.AllCategories, new { id = "select", @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(x => x.TitleImage, new { @class = "col-lg-2 control-label" })
            <div class="col-lg-10">

                <canvas id="coordinates-data-helper" data-x1="" data-x2="" data-y1="" data-y2="" data-w="" data-h="" width="0" height="0"></canvas>

                <input id="image-upload-input" type="file" name="TitleImage" />

                <img id="main-upload-image" src=""/>

                @if(!string.IsNullOrEmpty(Model.MainImageInBase64String))
                {
                    <img id="original-main-pic" src="@Model.MainImageInBase64String" width="600" height="400">
                }


                @*<div class="inline-labels">
                        <label>X1 <input type="text" size="4" id="x1" name="x1" /></label>
                        <label>Y1 <input type="text" size="4" id="y1" name="y1" /></label>
                        <label>X2 <input type="text" size="4" id="x2" name="x2" /></label>
                        <label>Y2 <input type="text" size="4" id="y2" name="y2" /></label>
                        <label>W <input type="text" size="4" id="w" name="w" /></label>
                        <label>H <input type="text" size="4" id="h" name="h" /></label>
                    </div>*@
                <input id="cropBtn" type="button" class="btn btn-success" value="Crop" onclick="cropBtn_click()" style="display:none;" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(x => x.ImportBranding, new { @class = "col-lg-2 control-label" })
            <div class="col-lg-10">
                @Html.EditorFor(x => x.ImportBranding)
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(x => x.Content, new { @class = "col-lg-2 control-label" })
            <div class="col-lg-10">
                @(Html.Kendo()
                      .Editor()
                      .HtmlAttributes(new { style = "height:500px" })
                      .Resizable(resizable => resizable.Content(true))
                      .Name("Content")
                      .Tools(tools => tools
                          .Clear()
                          .Bold().Italic().Underline().Strikethrough()
                          .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                          .InsertUnorderedList().InsertOrderedList()
                          .Outdent().Indent()
                          .Unlink()
                          .InsertImage()
                          .SubScript()
                          .SuperScript()
                          .TableEditing()
                          .ViewHtml()
                          .Formatting()
                          .CleanFormatting()
                          .FontName()
                          .FontSize()
                          .FontColor()
                          .BackColor()
                          .CustomButton(cb => cb
                              .Name("Add link to article")
                              .ToolTip("Add link to article")
                              .Exec("addLinkToArticle")
                          )
                          .CustomButton(cb => cb
                              .Name("Add video to article")
                              .ToolTip("Add video to article")
                              .Exec("addVideoToArticle")
                          ))
                          .Encode(false)
                          .ImageBrowser(imageBrowser => imageBrowser
                                 .Image("~/Content/Uploads/Images/{0}")
                                 .Read("Read", "ImageBrowser")
                                 .Create("Create", "ImageBrowser")
                                 .Upload("Upload", "ImageBrowser")
                                 .Thumbnail("Thumbnail", "ImageBrowser")))

            </div>
        </div>
    </fieldset>
</div>

